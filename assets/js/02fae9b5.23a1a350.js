"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[395],{1198:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"type":"mdx","permalink":"/roblox-director/","source":"@site/pages/index.md","title":"Director and Registry System","description":"When building data-driven games, you often create many ModuleScripts containing configurations for weapons, skills, NPCs, etc. Normally, you\'d need to manually require() each one and hope the data structure is correct.","frontMatter":{},"unlisted":false}');var s=t(4848),a=t(8453);const o={},i="Director and Registry System",l={},c=[{value:"How Registries Work",id:"how-registries-work",level:2},{value:"Example",id:"example",level:3},{value:"Benefits",id:"benefits",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"director-and-registry-system",children:"Director and Registry System"})}),"\n",(0,s.jsxs)(n.p,{children:["When building data-driven games, you often create many ModuleScripts containing configurations for weapons, skills, NPCs, etc. Normally, you'd need to manually ",(0,s.jsx)(n.code,{children:"require()"})," each one and hope the data structure is correct."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Director and Registries solve this by:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatically discovering and loading all your data modules from folders"}),"\n",(0,s.jsx)(n.li,{children:"Ensuring type safety so you catch data structure mistakes before runtime"}),"\n",(0,s.jsx)(n.li,{children:"Organizing everything with simple ID-based lookup"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"how-registries-work",children:"How Registries Work"}),"\n",(0,s.jsxs)(n.p,{children:["Think of a Registry as a ",(0,s.jsx)(n.strong,{children:"typed container"})," for related data:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Point it at a folder"})," containing your ModuleScripts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Registry automatically loads"})," each ModuleScript and assigns it an ID (the script's name)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fetch data by ID"})," with full type safety - your code knows exactly what data structure to expect"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'-- Create a registry for weapon data\nlocal weaponRegistry: Registry<WeaponData> = director.createRegistry("Weapons", weaponsFolder)\n\n-- Registry loads all ModuleScripts in weaponsFolder automatically\nweaponRegistry:load() -- This is a manual load for registry, you wouldn\'t use this on a normal setup.\n\n-- Fetch specific weapons with type safety\nlocal sword: WeaponData? = weaponRegistry:fetch("Sword")  -- Returns WeaponData or nil\nlocal bow: WeaponData? = weaponRegistry:fetch("Bow")\n\n-- Luau/TypeScript ensures your data matches WeaponData structure\n'})}),"\n",(0,s.jsx)(n.h2,{id:"benefits",children:"Benefits"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"No manual requires"})," - Just point at folders and let Registry handle loading"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Type safety"})," - Catch data structure errors at compile-time, not runtime"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clean organization"})," - ID-based lookup instead of scattered require() calls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Factory support"})," - Transform raw module data into proper class instances"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(6540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);